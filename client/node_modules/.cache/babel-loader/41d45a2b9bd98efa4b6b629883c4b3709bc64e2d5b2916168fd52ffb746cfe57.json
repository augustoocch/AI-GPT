{"ast":null,"code":"var _jsxFileName = \"/Users/augustoocchiuzzi/Desktop/AUGUSTO/PROGRAMACION/NetBeansProjects/arquant/chatGpt/arquantGPT/client/src/App.js\",\n  _s = $RefreshSig$();\nimport arquant from './img/logo-b.svg';\nimport chatgptimg from './img/chatgpt.svg';\nimport logochat from './img/logochat.png';\nimport { useState } from 'react';\nimport './css/App.css';\nimport './css/normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Add state for input and chat log\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"Cómo puedo ayudarte hoy?\"\n  }, {\n    user: \"me\",\n    message: \"i want to know something\"\n  }]);\n\n  //clear chat\n  function clearChat() {\n    setChatLog([]);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, {\n      user: \"Yo\",\n      message: `${input}`\n    }];\n    setInput(\"\");\n\n    //Fetch response to the api, combining the chat log array of messages \n    // and sending it as a message to localhost 3000 as a post\n    const messages = chatLogNew.map(message => message.message).join(\"\\n\");\n    const response = await fetch(\"http://localhost:3080/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: messages\n      })\n    });\n    const data = await response.json();\n    await setChatLog([...chatLog, {\n      user: \"gpt\",\n      message: `${data.message}`\n    }]);\n    console.log(data.message);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"arqlogo\",\n        src: arquant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-menu-button\",\n        onClick: clearChat,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \"Nuevo Chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-text-area\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uRiZgW2Vb637vhS13Q0lLMn7L5Y=\");\n_c = App;\nexport default App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar ${message.user == \"gpt\" && \"chatgpt\"}`,\n        children: message.user == \"gpt\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chatgptimg,\n          alt: \"ai\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 99\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n/*\n <div className='chat-log'>\n          <div className='chat-message'>\n            <div className='chat-message-center'>\n                <div className='avatar'><img src={logochat} alt=\"arqlogochat\" /></div>\n                <div className='message'>Hello world</div>\n            </div>\n          </div>\n          <div className='chat-message chatgpt'>\n            <div className='chat-message-center'>\n                <div className='avatar chatgpt'><img src={chatgptimg} alt=\"ai\" /></div>\n                <div className='message'>I am an AI</div>\n            </div>\n          </div>\n        </div>\n\n*/\n_c2 = ChatMessage;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["arquant","chatgptimg","logochat","useState","App","input","setInput","chatLog","setChatLog","user","message","clearChat","handleSubmit","e","preventDefault","chatLogNew","messages","map","join","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","index","target","value","ChatMessage"],"sources":["/Users/augustoocchiuzzi/Desktop/AUGUSTO/PROGRAMACION/NetBeansProjects/arquant/chatGpt/arquantGPT/client/src/App.js"],"sourcesContent":["import arquant from './img/logo-b.svg';\nimport chatgptimg from './img/chatgpt.svg';\nimport logochat from './img/logochat.png';\nimport   { useState } from 'react';\nimport './css/App.css';\nimport './css/normalize.css';\n\nfunction App() {\n\n  //Add state for input and chat log\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"Cómo puedo ayudarte hoy?\"\n  }, {\n    user: \"me\",\n    message: \"i want to know something\"\n  }])\n\n  //clear chat\n  function clearChat() {\n    setChatLog([]);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, {user: \"Yo\", message: `${input}`}];\n    setInput(\"\");\n\n    //Fetch response to the api, combining the chat log array of messages \n    // and sending it as a message to localhost 3000 as a post\n    const messages = chatLogNew.map((message) => message.message)\n    .join(\"\\n\");\n\n    const response = await fetch(\"http://localhost:3080/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: messages\n      })\n    });\n    const data = await response.json();\n    await setChatLog([...chatLog, {user: \"gpt\", message: `${data.message}`}])\n    console.log(data.message);\n  }\n  return (\n    <div className=\"App\">\n      <aside className=\"menu\">\n        <img alt=\"arqlogo\" src={arquant}/>\n        <div className='side-menu-button' onClick={clearChat}>\n          <span>+</span>\n          Nuevo Chat\n        </div>\n      </aside>\n      <section className=\"chatbox\">\n        <div className='chat-log'>\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n        </div>\n        \n        <div className='chat-input-holder'> \n        <form onSubmit={handleSubmit}>\n          <input rows=\"1\" className='chat-input-text-area' value={input} onChange={(e)=> setInput(e.target.value)}/>\n        </form>\n        </div>\n        \n      </section>\n    </div>\n  );\n}\n\nexport default App;\nconst ChatMessage = ({message}) => {\n  return (\n    <div className='chat-message'>\n      <div className='chat-message-center'>\n          <div className={`avatar ${message.user == \"gpt\" && \"chatgpt\"}`}>{message.user==\"gpt\" && <img src={chatgptimg} alt=\"ai\" />}</div>\n          <div className='message'>{message.message}</div>\n      </div>\n    </div>   \n  );\n\n}\n\n/*\n <div className='chat-log'>\n          <div className='chat-message'>\n            <div className='chat-message-center'>\n                <div className='avatar'><img src={logochat} alt=\"arqlogochat\" /></div>\n                <div className='message'>Hello world</div>\n            </div>\n          </div>\n          <div className='chat-message chatgpt'>\n            <div className='chat-message-center'>\n                <div className='avatar chatgpt'><img src={chatgptimg} alt=\"ai\" /></div>\n                <div className='message'>I am an AI</div>\n            </div>\n          </div>\n        </div>\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}